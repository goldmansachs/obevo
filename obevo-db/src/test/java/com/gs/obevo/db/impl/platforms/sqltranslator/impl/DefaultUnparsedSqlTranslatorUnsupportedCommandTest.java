/**
 * Copyright 2017 Goldman Sachs.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package com.gs.obevo.db.impl.platforms.sqltranslator.impl;

import java.util.Arrays;
import java.util.Collection;

import org.hamcrest.Matchers;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

/**
 * Parameterized unit Test to test various combinations of DB2 commands that are skipped in in-memory database
 * like H2.
 * Separated from default test class as jUnit doesnt support mixing parameterized and non-parametrized tests.
 */
@RunWith(Parameterized.class)
public class DefaultUnparsedSqlTranslatorUnsupportedCommandTest {

    private final String input;
    private final String expectedResult;

    public DefaultUnparsedSqlTranslatorUnsupportedCommandTest(String input, String expectedResult) {
        this.input = input;
        this.expectedResult = expectedResult;
    }

    /**
     * sets up various combinations of input and expectedResult parameters to the test
     */
    @Parameters(name = "{index}: translate[input:{0}]=>[expectedResult:{1}]")
    public static Collection<Object[]> data() {
        return Arrays
                .asList(new Object[][] {
                        { "ALTER TABLE CALCRESULTTRANSPARENCY ALTER COLUMN ID SET GENERATED BY DEFAULT", "" }
                        ,
                        {
                                "ALTER      TABLE       CALCRESULTTRANSPARENCY    ALTER   COLUMN    ID    SET    GENERATED      BY    DEFAULT",
                                "" }
                        ,
                        { "ALTER TABLE CALCRESULTTRANSPARENCY ALTER COLUMN ID SET CHAR",
                                "ALTER TABLE CALCRESULTTRANSPARENCY ALTER COLUMN ID SET CHAR" }
                        ,
                        { "ALTER TABLE CALCRESULTTRANSPARENCY ALTER COLUMN ID DROP IDENTITY", "" }
                        ,
                        { "ALTER 			TABLE 	CALCRESULTTRANSPARENCY 	     	ALTER 		  COLUMN 	  ID 	    DROP 		 IDENTITY",
                                "" }
                        ,
                        { "ALTER TABLE CALCRESULTTRANSPARENCY ALTER COLUMN ID DROP CONSTRAINT",
                                "ALTER TABLE CALCRESULTTRANSPARENCY ALTER COLUMN ID DROP CONSTRAINT" }
                        ,
                        { "ALTER TABLE CALCRESULTTRANSPARENCY DROP COLUMN ID",
                                "ALTER TABLE CALCRESULTTRANSPARENCY DROP COLUMN ID" }
                });
    }

    @Test
    public void testTranslate() {
        String result = new DefaultUnparsedSqlTranslator().handleRawFullSql(this.input, null);
        Assert.assertThat("Wrong result from translation", result, Matchers.equalToIgnoringWhiteSpace(this
                .expectedResult));
    }
}