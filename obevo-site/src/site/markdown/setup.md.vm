<!--

    Copyright 2017 Goldman Sachs.
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<!--
Cannot use # as header markers for velocity files as they are interpreted by velocity.
Instead, use the alternate syntax (===== for h1, dashes for h2, and the xml tags like <h3> otherwise.
-->

Setup Obevo
===========

You can access via [Docker](https://hub.docker.com/r/shantstepanian/obevo/tags/) and invoke the API via command line:

```
docker pull shantstepanian/obevo
```

Alternatively, you can download the binary from the [releases page](https://github.com/goldmansachs/obevo/releases)

* [Latest Release - ${project.version}](https://github.com/goldmansachs/obevo/releases/download/${project.version}/obevo-cli-${project.version}-dist.zip)

For access via other APIs or build tools, please see the relevant pages:

* [Java](java-api.html)
* [Maven](maven-api.html)
* [Gradle](gradle-api.html)

Setting up your Obevo distribution
----------------------------------

Obevo is licensed as Apache 2.0; thus, any proprietary dependencies (notably any proprietary JDBC drivers) cannot be
included in the distributions that we create.

As of this writing, this applies to the following DBMS types:

* DB2
* Oracle
* Redshift
* Sybase ASE
* Sybase IQ

To use Obevo with these databases, you will need to acquire the JDBC drivers yourself and include them in the distribution
as follows:

<h3>Docker distribution</h3>

Documentation TBA


<h3>Zip binary distribution</h3>

Add the JDBC drivers to the /extlib or /lib folder


<h3>Java API</h3>

Add the JDBC drivers to your classpath using whichever method is relevant for your developer setup

<h3>Maven API</h3>

Add the JDBC drivers to your Maven repository and declare them as dependencies in your pom file, per the &lt;dependencies&gt; tag example below

```xml
<plugin>
    <groupId>com.goldmansachs.obevo</groupId>
    <artifactId>obevo-maven-plugin</artifactId>
    <version>${obevo.version}</version>
    <executions>
        <execution>
            <id>deploy-db-module</id>
            <goals>
                <goal>deploy</goal>
            </goals>
            <configuration>
                <env>dev1</env>
                <user>deployer</user>
                <password>deploypass</password>
                <sourcePath>src/main/database</sourcePath>
            </configuration>
        </execution>
    </executions>
    <dependencies>
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc14</artifactId>
            <version>10.2.0.4.0</version>
        </dependency>
        <dependency>
            <groupId>com.ibm.db2</groupId>
            <artifactId>db2jcc</artifactId>
            <version>x.y.z</version>
        </dependency>
    </dependencies>
</plugin>
```
